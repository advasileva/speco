before: |
  [s] > counter
    memory > k
      s
    [] > next
      seq > @
        ^
        .k
        .write
          ^
          .k
          .plus
            1
        ^
        .k
  [] > app
    counter > c
      0
    c
    .next > x1
    c
    .next > x2
    c
    .next > x3
    seq > @
      QQ
      .io
      .stdout
        QQ
        .txt
        .sprintf
          "First: %d\nSecond: %d\nThird: %d\n"
          x1
          x2
          x3

after: |
  [s] > counter
    memory > k
      s
    [] > next
      seq > @
        ^
        .k
        .write
          ^
          .k
          .plus
            1
        ^
        .k
    [s] > with_counter
      counter_spec_s_counter > @
        s
    [s] > with_counter_next
      counter_spec_s_counter_next > @
        s
    [s] > with_app
      counter_spec_s_app > @
        s
    [] > next_as_tuple
      seq > @
        TRUE
        *
          ^
          .k
          ^
  
  [] > app
    counter > c
      0
    c
    .next_as_tuple > x1_tuple
    x1_tuple
    .at > x1
      0
    x1_tuple
    .at
      1
    .next_as_tuple > x2_tuple
    x2_tuple
    .at > x2
      0
    x2_tuple
    .at
      1
    .next_as_tuple > x3_tuple
    x3_tuple
    .at > x3
      0
    seq > @
      QQ
      .io
      .stdout
        QQ
        .txt
        .sprintf
          "First: %d\nSecond: %d\nThird: %d\n"
          x1
          x2
          x3
  
  [s] > counter_spec_s_counter
    memory > k
      s
    [] > next
      seq > @
        ^
        .k
        .write
          ^
          .k
          .plus
            1
        ^
        .k
    [s] > with_counter
      counter_spec_s_counter > @
        s
    [s] > with_counter_next
      counter_spec_s_counter_next > @
        s
    [s] > with_app
      counter_spec_s_app > @
        s
    [] > next_as_tuple
      seq > @
        TRUE
        *
          ^
          .k
          ^
  
  [s] > counter_spec_s_counter_next
    memory > k
      s
    [] > next
      seq > @
        ^
        .k
        .write
          ^
          .k
          .plus
            1
        ^
        .k
    [s] > with_counter
      counter_spec_s_counter > @
        s
    [s] > with_counter_next
      counter_spec_s_counter_next > @
        s
    [s] > with_app
      counter_spec_s_app > @
        s
    [] > next_as_tuple
      seq > @
        TRUE
        *
          ^
          .k
          ^
  
  [s] > counter_spec_s_app
    memory > k
      s
    [] > next
      seq > @
        ^
        .k
        .write
          ^
          .k
          .plus
            1
        ^
        .k
    [s] > with_counter
      counter_spec_s_counter > @
        s
    [s] > with_counter_next
      counter_spec_s_counter_next > @
        s
    [s] > with_app
      counter_spec_s_app > @
        s
    [] > next_as_tuple
      seq > @
        TRUE
        *
          ^
          .k
          ^

result: |
  First: 1
  Second: 3
  Third: 5